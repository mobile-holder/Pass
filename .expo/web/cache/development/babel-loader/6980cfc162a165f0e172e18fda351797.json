{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onPress\", \"onChangeRes\"];\n\nvar _this = this,\n    _jsxFileName = \"/home/bstudent/project/pass3/src/components/IssueButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { theme } from \"../colors/Theme\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar IssueButton = function IssueButton(_ref) {\n  var _onPress = _ref.onPress,\n      onChangeRes = _ref.onChangeRes,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var title = props.title;\n  var titleColor = '#fff';\n  var uid = props.uid;\n  var company = props.company;\n  var location = props.location;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      exist = _useState2[0],\n      setExist = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      save = _useState4[0],\n      setSave = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      did = _useState6[0],\n      setDid = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userVC = _useState8[0],\n      setUserVC = _useState8[1];\n\n  var _saveData = function _saveData(value) {\n    return _regeneratorRuntime.async(function _saveData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('tasks_vc', JSON.stringify(value), function () {}));\n\n          case 3:\n            setSave(true);\n            setDid(value.data.data.identity.did);\n            setUserVC(value.data.data.vc);\n            console.log(save);\n            console.log(did);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            ;\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var createVC = function createVC() {\n    var parseRes = '';\n    var parseDid = '';\n    var parseUserVC = '';\n    var jwt = '';\n    axios.post('http://localhost:3000/issue/employee', {\n      uid: uid,\n      company: company,\n      location: location\n    }).then(function (response) {\n      _saveData(response);\n\n      console.log(response);\n      console.log(did);\n    }).catch(function (err) {\n      setSave(false);\n      console.log(err);\n    });\n  };\n\n  useEffect(function () {\n    if (exist) {\n      if (!uid) {\n        setExist(false);\n      }\n\n      ;\n    } else {\n      if (uid) {\n        setExist(true);\n      } else setExist(false);\n    }\n\n    ;\n    createVC();\n  }, [uid]);\n  return exist && save ? React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      _onPress(did, userVC);\n\n      console.log(did);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      color: titleColor\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, title, \" \")) : React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return alert(\"다시 확인해주세요\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      color: titleColor\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, title, \" \"));\n};\n\nvar styles = StyleSheet.create({\n  button: _objectSpread({\n    backgroundColor: theme.blue900,\n    width: 245,\n    height: 65,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }, Platform.select({\n    ios: {\n      shadowColor: theme.mono800,\n      shadowOffset: {\n        width: 10,\n        height: 10\n      },\n      shadowOpacity: 0.5,\n      shadowRadius: 10\n    },\n    android: {\n      elevation: 12\n    }\n  })),\n  title: {\n    fontSize: 30\n  }\n});\nexport default IssueButton;","map":{"version":3,"sources":["/home/bstudent/project/pass3/src/components/IssueButton.js"],"names":["React","useEffect","useState","theme","axios","AsyncStorage","IssueButton","onPress","onChangeRes","props","title","titleColor","uid","company","location","exist","setExist","save","setSave","did","setDid","userVC","setUserVC","_saveData","value","setItem","JSON","stringify","data","identity","vc","console","log","error","createVC","parseRes","parseDid","parseUserVC","jwt","post","then","response","catch","err","styles","button","color","alert","StyleSheet","create","backgroundColor","blue900","width","height","alignItems","justifyContent","Platform","select","ios","shadowColor","mono800","shadowOffset","shadowOpacity","shadowRadius","android","elevation","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TouchableOpacity, StyleSheet, Text, Platform } from 'react-native';\nimport { theme } from '../colors/Theme';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst IssueButton = ({onPress, onChangeRes, ...props}) => {\n    const title = props.title;\n    const titleColor = '#fff';\n    const uid = props.uid;\n    const company = props.company;\n    const location = props.location;\n    const [exist, setExist] = useState(false);\n    const [save, setSave] = useState(false);\n    const [did, setDid] = useState();\n    const [userVC, setUserVC] = useState('');\n\n    \n    const _saveData = async (value) => {\n        try {\n            //setVc(value[1]);\n            //setIdentity(value[2]);\n            \n            await AsyncStorage.setItem('tasks_vc', JSON.stringify(value), () => {\n                \n            });\n            setSave(true);\n                setDid(value.data.data.identity.did);\n                setUserVC(value.data.data.vc);\n                console.log(save);\n                console.log(did);\n        } catch (e) {\n            //setExist(false);\n            \n            console.error(e);\n        };\n    };\n    //http:localhost:3000/issue/employee/\n    //getUserDBInfo() 를 통해 value에 대한 데이터가 맞는지\n    const createVC=(() => {\n        const parseRes = '';\n        const parseDid = '';\n        const parseUserVC = '';\n        const jwt='';\n        axios.post('http://localhost:3000/issue/employee',{\n                uid : uid,\n                company : company,\n                location : location,\n        })\n        .then(function (response) {\n            _saveData(response);\n            console.log(response);\n            console.log(did);\n            /*try {\n                const result = AsyncStorage.getItem('tasks_vc') ;\n                    const jwt = JSON.parse(result);\n                    console.log(jwt);\n        \n                    setUserVC(jwt.data.data.vc);\n                    setDid(jwt.data.data.identity.did);\n                    \n                } catch (err) {\n                    console.error(err);\n                };\n        \n            /*jwt = JSON.stringify(`${response}`);\n            console.log(jwt);\n\n            setUserVC(jwt.data.data.vc);\n            setDid(jwt.data.data.identity.did);\n            console.log(did);*/\n        })\n        .catch(function (err) {\n            setSave(false);\n            console.log(err);\n            \n        });\n    });\n\n    useEffect(() => {\n        if(exist) {\n            if(!uid) {\n                setExist(false); // 처음 진입해서 id 입력 안할시\n            };// 처음 진입해서 id 입력시\n        } else {\n            if(uid) { //지우고 다시 쓸때\n                setExist(true);\n            } else setExist(false); // 안쓴다면\n        };\n        createVC();\n    },[uid]);\n\n    return exist&&save ? (\n        <TouchableOpacity style={styles.button}\n                onPress = {() => {onPress(did, userVC); console.log(did);} } \n            >\n                <Text style={[\n                    styles.title,\n                    { color: titleColor }\n                ]}>{title} </Text>\n            </TouchableOpacity>\n    ) : (\n        <TouchableOpacity style={styles.button}\n                onPress = {() => alert(\"다시 확인해주세요\")}\n            >\n                <Text style={[\n                    styles.title,\n                    { color: titleColor }\n                ]}>{title} </Text>\n            </TouchableOpacity>\n    )\n};\n\nconst styles = StyleSheet.create({\n    button: {\n        backgroundColor: theme.blue900,\n        width: 245,\n        height: 65,\n        alignItems: 'center',\n        justifyContent: 'center',\n        ...Platform.select({\n            ios: {\n                shadowColor: theme.mono800,\n                shadowOffset: {\n                    width: 10,\n                    height: 10,\n                },\n                shadowOpacity: 0.5,\n                shadowRadius: 10,\n            },\n            android: {\n                elevation: 12,\n            },\n        }),\n    },\n    title: {\n        fontSize: 30,\n    },\n});\n\nexport default IssueButton;"]},"metadata":{},"sourceType":"module"}