{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onPress\"];\n\nvar _this = this,\n    _jsxFileName = \"/home/bstudent/project/pass3/src/components/IssueButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { theme } from \"../colors/Theme\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar IssueButton = function IssueButton(_ref) {\n  var onPress = _ref.onPress,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var title = props.title;\n  var titleColor = '#fff';\n  var uid = props.uid;\n  var company = props.company;\n  var location = props.location;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      exist = _useState2[0],\n      setExist = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      vc = _useState4[0],\n      setVc = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      identity = _useState6[0],\n      setIdentity = _useState6[1];\n\n  var _saveData = function _saveData(value) {\n    return _regeneratorRuntime.async(function _saveData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('tasks_vc', JSON.stringify(value)));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 8:\n            ;\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var createVC = function createVC() {\n    axios.post('http://localhost:3000/issue/employee', {\n      uid: uid,\n      company: company,\n      location: location\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  useEffect(function () {\n    if (exist) {\n      if (!uid) {\n        setExist(false);\n      }\n\n      ;\n    } else {\n      if (uid) {\n        setExist(true);\n      } else setExist(false);\n    }\n\n    ;\n  }, [exist, uid]);\n  return exist ? React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      createVC();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      color: titleColor\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, title, \" \")) : React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return alert(\"ID를 확인해주세요\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      color: titleColor\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, title, \" \"));\n};\n\nvar styles = StyleSheet.create({\n  button: _objectSpread({\n    backgroundColor: theme.blue900,\n    width: 245,\n    height: 65,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }, Platform.select({\n    ios: {\n      shadowColor: theme.mono800,\n      shadowOffset: {\n        width: 10,\n        height: 10\n      },\n      shadowOpacity: 0.5,\n      shadowRadius: 10\n    },\n    android: {\n      elevation: 12\n    }\n  })),\n  title: {\n    fontSize: 30\n  }\n});\nexport default IssueButton;","map":{"version":3,"sources":["/home/bstudent/project/pass3/src/components/IssueButton.js"],"names":["React","useEffect","useState","theme","axios","AsyncStorage","IssueButton","onPress","props","title","titleColor","uid","company","location","exist","setExist","vc","setVc","identity","setIdentity","_saveData","value","setItem","JSON","stringify","console","error","createVC","post","then","response","log","catch","styles","button","color","alert","StyleSheet","create","backgroundColor","blue900","width","height","alignItems","justifyContent","Platform","select","ios","shadowColor","mono800","shadowOffset","shadowOpacity","shadowRadius","android","elevation","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TouchableOpacity, StyleSheet, Text, Platform } from 'react-native';\nimport { theme } from '../colors/Theme';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\nconst IssueButton = ({onPress, ...props}) => {\n    const title = props.title;\n    const titleColor = '#fff';\n    const uid = props.uid;\n    const company = props.company;\n    const location = props.location;\n    const [exist, setExist] = useState(true);\n    const [vc, setVc] = useState('');\n    const [identity, setIdentity] = useState([]);\n\n    \n    const _saveData = async (value) => {\n        try {\n            //setVc(value[1]);\n            //setIdentity(value[2]);\n            await AsyncStorage.setItem('tasks_vc', JSON.stringify(value));\n             \n        } catch (e) {\n            console.error(e);\n        };\n    };\n    //http:localhost:3000/issue/employee/\n    //getUserDBInfo() 를 통해 value에 대한 데이터가 맞는지\n    const createVC=(() => {\n        axios.post('http://localhost:3000/issue/employee',{\n            \n                uid : uid,\n                company : company,\n                location : location,\n            \n        })\n        .then(function (response) {\n            //_saveData(response);\n            console.log(response);\n            //setExist(true);\n        })\n        .catch(function (error) {\n            //alert(\"정보가 없습니다\");\n            console.log(error);\n            //setExist(false);\n        })\n    });\n\n    useEffect(() => {\n        if(exist) {\n            if(!uid) {\n                setExist(false); // 처음 진입해서 id 입력 안할시\n            };// 처음 진입해서 id 입력시\n        } else {\n            if(uid) { //지우고 다시 쓸때\n                setExist(true);\n            } else setExist(false); // 안쓴다면\n        };\n    },[exist,uid]);\n\n    return exist ? (\n        <TouchableOpacity style={styles.button}\n                onPress = {() => { createVC(); }}\n            >\n                <Text style={[\n                    styles.title,\n                    { color: titleColor }\n                ]}>{title} </Text>\n            </TouchableOpacity>\n    ) : (\n        <TouchableOpacity style={styles.button}\n                onPress = {() => alert(\"ID를 확인해주세요\")}\n            >\n                <Text style={[\n                    styles.title,\n                    { color: titleColor }\n                ]}>{title} </Text>\n            </TouchableOpacity>\n    )\n};\n\nconst styles = StyleSheet.create({\n    button: {\n        backgroundColor: theme.blue900,\n        width: 245,\n        height: 65,\n        alignItems: 'center',\n        justifyContent: 'center',\n        ...Platform.select({\n            ios: {\n                shadowColor: theme.mono800,\n                shadowOffset: {\n                    width: 10,\n                    height: 10,\n                },\n                shadowOpacity: 0.5,\n                shadowRadius: 10,\n            },\n            android: {\n                elevation: 12,\n            },\n        }),\n    },\n    title: {\n        fontSize: 30,\n    },\n});\n\nexport default IssueButton;"]},"metadata":{},"sourceType":"module"}