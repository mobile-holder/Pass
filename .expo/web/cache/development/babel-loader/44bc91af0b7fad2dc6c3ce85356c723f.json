{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/home/bstudent/project/pass3/src/components/drawNavi/DrawerNavigation.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport * as ImagePicker from 'expo-image-picker';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction CustomDrawerContent(props) {\n  var _saveData = function _saveData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function _saveData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('tasks_ficture', jsonValue));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 9:\n            ;\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var openImagePickerAsync = function openImagePickerAsync() {\n    var permissionResult, pickerResult;\n    return _regeneratorRuntime.async(function openImagePickerAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            permissionResult = _context2.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context2.next = 6;\n              break;\n            }\n\n            alert(\"Permission to access camera roll is required!\");\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 8:\n            pickerResult = _context2.sent;\n            console.log(pickerResult);\n\n            if (!(pickerResult.cancelled === true)) {\n              _context2.next = 12;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 12:\n            _saveData(pickerResult);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(DrawerContentScrollView, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(DrawerItem, {\n    label: \"\\uC124\\uC815\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(DrawerItem, {\n    label: \"\\uC0AC\\uC9C4 \\uB4F1\\uB85D\",\n    onPress: openImagePickerAsync,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), React.createElement(DrawerItemList, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })));\n}\n\nfunction reservation() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"\\uC624\\uD53C\\uC2A4 \\uB8F8 \\uC608\\uC57D \\uD398\\uC774\\uC9C0\"));\n}\n\nvar Drawer = createDrawerNavigator();\n\nfunction menuDrawer() {\n  var _this = this;\n\n  return React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 39\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"\\uC624\\uD53C\\uC2A4 \\uB8F8 \\uC608\\uC57D(\\uBBF8\\uAD6C\\uD604)\",\n    component: reservation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default menuDrawer;","map":{"version":3,"sources":["/home/bstudent/project/pass3/src/components/drawNavi/DrawerNavigation.js"],"names":["React","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","ImagePicker","AsyncStorage","CustomDrawerContent","props","_saveData","value","jsonValue","JSON","stringify","setItem","console","error","openImagePickerAsync","requestMediaLibraryPermissionsAsync","permissionResult","granted","alert","launchImageLibraryAsync","pickerResult","log","cancelled","reservation","flex","justifyContent","alignItems","Drawer","menuDrawer"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,SACIC,qBADJ,EAEIC,uBAFJ,EAGIC,cAHJ,EAIIC,UAJJ,QAKO,0BALP;AAMA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChC,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJC,YAAAA,SAFI,GAEQC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAFR;AAAA;AAAA,6CAGJJ,YAAY,CAACQ,OAAb,CAAqB,eAArB,EAAsCH,SAAtC,CAHI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKVI,YAAAA,OAAO,CAACC,KAAR;;AALU;AAMb;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AASA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACIZ,WAAW,CAACa,mCAAZ,EADJ;;AAAA;AACrBC,YAAAA,gBADqB;;AAAA,kBAGrBA,gBAAgB,CAACC,OAAjB,KAA6B,KAHR;AAAA;AAAA;AAAA;;AAIrBC,YAAAA,KAAK,CAAC,+CAAD,CAAL;AAJqB;;AAAA;AAAA;AAAA,6CAQAhB,WAAW,CAACiB,uBAAZ,EARA;;AAAA;AAQrBC,YAAAA,YARqB;AASzBR,YAAAA,OAAO,CAACS,GAAR,CAAYD,YAAZ;;AATyB,kBAUrBA,YAAY,CAACE,SAAb,KAA2B,IAVN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAazBhB,YAAAA,SAAS,CAACc,YAAD,CAAT;;AAbyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAgBA,SACI,oBAAC,uBAAD,eAA6Bf,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAC,cADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,UAAD;AACI,IAAA,KAAK,EAAC,2BADV;AAEI,IAAA,OAAO,EAAES,oBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EASI,oBAAC,cAAD,eAAoBT,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATJ,CADJ;AAaH;;AAED,SAASkB,WAAT,GAAuB;AACnB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADF,CADF;AAKD;;AAEH,IAAMC,MAAM,GAAG7B,qBAAqB,EAApC;;AAEA,SAAS8B,UAAT,GAAsB;AAAA;;AAClB,SACI,oBAAC,MAAD,CAAQ,SAAR;AACI,IAAA,aAAa,EAAE,uBAACvB,KAAD;AAAA,aAAW,oBAAC,mBAAD,eAAyBA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;AAAA,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGA,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,4DAApB;AAAoC,IAAA,SAAS,EAAEkB,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CADJ;AAOH;;AAED,eAAeK,UAAf","sourcesContent":["import * as React from 'react';\nimport { View, Text, Button, TouchableOpacity } from 'react-native';\nimport {\n    createDrawerNavigator,\n    DrawerContentScrollView,\n    DrawerItemList,\n    DrawerItem,\n} from '@react-navigation/drawer';\nimport * as ImagePicker from 'expo-image-picker';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction CustomDrawerContent(props) {\n    const _saveData = async (value) => {\n        try {\n            const jsonValue = JSON.stringify(value);\n            await AsyncStorage.setItem('tasks_ficture', jsonValue);\n        } catch (e) {\n            console.error(e);\n        };\n    };\n\n    const openImagePickerAsync = async () => {\n        let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert(\"Permission to access camera roll is required!\");\n            return;\n        }\n\n        let pickerResult = await ImagePicker.launchImageLibraryAsync();\n        console.log(pickerResult);\n        if (pickerResult.cancelled === true) {\n            return;\n        }\n        _saveData(pickerResult); // 사진 저장\n    }  \n\n    return (\n        <DrawerContentScrollView {...props}>\n            <DrawerItem\n                label=\"설정\"\n            />\n            <DrawerItem\n                label=\"사진 등록\"\n                onPress={openImagePickerAsync}\n            >\n            </DrawerItem>\n            <DrawerItemList {...props} />\n        </DrawerContentScrollView>\n    );\n}\n\nfunction reservation() {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <Text>오피스 룸 예약 페이지</Text>\n      </View>\n    );\n  }\n\nconst Drawer = createDrawerNavigator();\n\nfunction menuDrawer() {\n    return (\n        <Drawer.Navigator\n            drawerContent={(props) => <CustomDrawerContent {...props} />}\n        >\n        <Drawer.Screen name=\"오피스 룸 예약(미구현)\" component={reservation}/>\n        </Drawer.Navigator>\n    );\n}\n\nexport default menuDrawer;"]},"metadata":{},"sourceType":"module"}